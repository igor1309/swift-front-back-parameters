// —è –ø–æ–¥—É–º–∞–ª —á—Ç–æ —ç—Ç–æ –æ—Ç–ª–∏—á–Ω—ã–π –∫–µ–π—Å –¥–ª—è `Strong ID Type`, –∫–æ—Ç–æ—Ä—ã–π –¥–µ–ª–∞–µ—Ç—Å—è —Å –ø–æ–º–æ—â—å—é —Ñ–∞–Ω—Ç–æ–º–Ω—ã—Ö —Ç–∏–ø–æ–≤
// –∏ —Ç—É—Ç —Å–Ω–æ–≤–∞ –≥–æ—Ä—è—á–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é Point-Free üòÉ —Å –∏—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫–æ–π [Tagged](https://github.com/pointfreeco/swift-tagged) (—Å –Ω–µ–µ, –∫—Å—Ç–∞—Ç–∏, –Ω–∞—á–∞–ª–æ—Å—å –º–æ–µ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å –Ω–∏–º–∏)
// –∏—Å–ø–æ–ª—å–∑—É—è —Ñ–∞–Ω—Ç–æ–º–Ω—ã–µ —Ç–∏–ø—ã –º—ã –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ —Å–º–µ—à–∞–µ–º id —Ä–∞–∑–Ω—ã—Ö —Å—É—â–Ω–æ—Å—Ç–µ–π –ø—Ä–æ—Å—Ç–æ –ø–æ—Ç–æ–º—É —á—Ç–æ —ç—Ç–æ —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã

import Tagged

protocol Parameter<ID, Value> {
    
    associatedtype ID
    associatedtype Value
    
    var id: Tagged<Value, ID> { get }
    var value: Value { get }
}

struct InfoParameter: Parameter {
    
    let id: Tagged<Info, String>
    let value: Info
    
    struct Info {
        
        let title: String
        let icon: Icon
    }
}

struct Icon {
    
    //...
}

struct ProductParameter: Parameter {
    
    let id: Tagged<Product, String>
    let value: Product
    
    struct Product {
        
        let type: ProductType
        
        enum ProductType {
            
            case card
            case account
            // ...
        }
    }
}

struct ButtonParameter: Parameter {
    
    let id: Tagged<Button, String>
    let value: Button
    
    struct Button {
        
        let title: String
        let style: ButtonStyle
        
        enum ButtonStyle {
            
            case primary
            case secondary
        }
    }
}
